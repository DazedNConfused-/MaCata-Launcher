<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.dazednconfused</groupId>
    <artifactId>macatalauncher</artifactId>
    <version>0.1</version>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.github.akman</groupId>
                            <artifactId>jpackage-maven-plugin</artifactId>
                            <version>0.1.5</version>
                            <configuration>
                                <!--
                                  Specifies the JDK home path which provides the tool needed.
                                  If not specified the jpackage tool executable will be find in
                                  the following order:

                                    - user specified JDK home directory by toolchains-plugin
                                    - JDK home directory specified by system variable JAVA_HOME
                                    - system path specified by system variable PATH
                                -->
                                <toolhome>${java.home}</toolhome>

                                <!--
                                  Specifies the location in which generated output files are placed.
                                  Default value: ${project.build.directory}/jpackage
                                -->
                                <dest>${project.build.directory}/jpackage</dest>

                                <!--
                                  Specifies the name of subdirectory relative to the destination
                                  directory in which files of generated application image are placed.
                                -->
                                <name>MaCataLauncher</name>

                                <!--
                                  Specifies the type of package to
                                  create: { PLATFORM | IMAGE | EXE | MSI }.
                                  Default value: PLATFORM (a platform dependent default type)
                                -->
                                <type>IMAGE</type>

                                <!--
                                  Specifies the location of the predefined runtime
                                  image (result of jlink) that will be copied into
                                  the application image.
                                  If not specified, jpackage will run jlink to create
                                  the runtime image using options:
                                    - strip-debug
                                    - no-header-files
                                    - no-man-pages
                                    - strip-native-commands
                                -->
                                <!-- <runtimeimage>${project.build.directory}/jlink/runtime-image</runtimeimage> -->

                                <!--
                                  Specifies version of the application and/or package.
                                -->
                                <appversion>${project.version}</appversion>

                                <!--
                                  Specifies copyright for the application.
                                -->
                                <copyright>Copyright</copyright>

                                <!--
                                  Specifies description of the application.
                                -->
                                <description>Description</description>

                                <!--
                                  Specifies vendor of the application.
                                -->
                                <vendor>Vendor</vendor>

                                <!--
                                  Specifies the location of the icon of the application package.
                                -->
                                <icon>${project.basedir}/src/main/resources/logo/logo.png</icon>

                                <!--
                                    Specifies the module path. The path where the jlink tool
                                    discovers observable modules: modular JAR files, JMOD files,
                                    exploded modules. If this option is not specified, then
                                    the default module path is $ JAVA_HOME/jmods. This directory
                                    contains the java.base module and the other standard and
                                    JDK modules. If this option is specified but the java.base
                                    module cannot be resolved from it, then the jlink command
                                    appends $ JAVA_HOME/jmods to the module path.
                                    Pass on &dash;-modulepath option to jlink.

                                    pathelements - passed to jlink as is
                                    filesets - sets of files (without directories)
                                    dirsets - sets of directories (without files)
                                    dependencysets - sets of dependencies with specified includes
                                                     and excludes patterns (glob: or regex:)
                                                     for file names and regex patterns only
                                                     for module names, and excludes
                                                     for automatic modules
                                -->
                                <modulepath>
                                    <dependencysets>
                                        <dependencyset>
                                            <includeoutput>true</includeoutput>
                                            <excludeautomatic>true</excludeautomatic>
                                        </dependencyset>
                                    </dependencysets>
                                </modulepath>

                                <!--
                                  Specifies the main module (and optionally main class) of
                                  the application. This module must be located on the module path.
                                  When this option is specified, the main module will be linked
                                  in the Java runtime image.
                                  Either module or main-jar option can be specified
                                  but not both.
                                -->
                                <module>com.dazednconfused.catalauncher/Application</module>

                                <!--
                                  Specifies the command line arguments to pass to the main class
                                  if no command line arguments are given to the launcher.
                                -->
                                <arguments>--opt</arguments>

                                <!--
                                  Specifies the options to pass to the Java runtime.
                                -->
                                <javaoptions>-Dfile.encoding=UTF-8 -Xms256m -Xmx512m</javaoptions>

                                <!--
                                  Specifies options are added to, or used to overwrite,
                                  the original command line options to build additional
                                  alternative launchers.
                                -->
                                <addlaunchers>
                                    <addlauncher>
                                        <name>appname-cli</name>
                                        <module>appModuleName/appClassName</module>
                                        <arguments>--help</arguments>
                                        <javaoptions>-Xms256m -Xmx512m</javaoptions>
                                        <appversion>1.0</appversion>
                                        <icon>${project.basedir}/config/jpackage/resources/appname-cli.ico</icon>
                                        <winconsole>true</winconsole>
                                    </addlauncher>
                                </addlaunchers>

                                <!--
                                  Specifies the location of a resources directory that override
                                  jpackage resources. Icons, template files, and other resources
                                  of jpackage can be overridden by adding replacement resources
                                  to this directory.
                                -->
                                <!-- <resourcedir>${project.basedir}/config/jpackage/resources</resourcedir> -->
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
                
                <plugins>
                    <plugin>
                        <groupId>com.github.akman</groupId>
                        <artifactId>jpackage-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>jpackage-image</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>jpackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.0.0-M7</version>
                        <configuration>
                            <useSystemClassLoader>false</useSystemClassLoader>
                            <excludes></excludes>
                            <reportFormat>plain</reportFormat>
                            <reuseForks>true</reuseForks>
                            <forkCount>1C</forkCount>
                            <forkedProcessExitTimeoutInSeconds>3000</forkedProcessExitTimeoutInSeconds>
                            <forkedProcessTimeoutInSeconds>0</forkedProcessTimeoutInSeconds>
                            <parallel>all</parallel>
                            <useUnlimitedThreads>true</useUnlimitedThreads>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <id>validate</id>
                                <phase>validate</phase>
                                <configuration>
                                    <configLocation>checkstyle.xml</configLocation>
                                    <encoding>UTF-8</encoding>
                                    <consoleOutput>true</consoleOutput>
                                    <failsOnError>true</failsOnError>
                                </configuration>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.10.1</version>
                        <configuration>
                            <source>11</source>
                            <target>11</target>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>3.3.0</version>
                        <configuration>
                            <archive>
                                <manifest>
                                    <addClasspath>true</addClasspath>
                                    <mainClass>com.dazednconfused.catalauncher.gui.MainWindow</mainClass>
                                </manifest>
                            </archive>
                        </configuration>
                    </plugin>

                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifest>
                                    <mainClass>com.dazednconfused.catalauncher.gui.MainWindow</mainClass>
                                </manifest>
                            </archive>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <finalName>${project.build.finalName}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                        <executions>
                            <execution>
                                <id>assemble-all</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- required for Maven & GUI Designer to play together -->
                    <!-- also need the custom pluginRepositories below -->
                    <!-- https://stackoverflow.com/a/69258838 -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>ideauidesigner-maven-plugin</artifactId>
                        <version>1.0-beta-1</version>
                        <dependencies>
                            <dependency>
                                <groupId>com.jetbrains.intellij.java</groupId>
                                <artifactId>java-compiler-ant-tasks</artifactId>
                                <version>212.5284.40</version>
                            </dependency>
                            <dependency>
                                <groupId>com.jetbrains.intellij.java</groupId>
                                <artifactId>java-gui-forms-rt</artifactId>
                                <version>212.5284.40</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>javac2</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <fork>true</fork>
                            <debug>true</debug>
                            <failOnError>true</failOnError>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.github.git-commit-id</groupId>
                        <artifactId>git-commit-id-maven-plugin</artifactId>
                        <version>5.0.0</version>
                        <executions>
                            <execution>
                                <id>get-the-git-infos</id>
                                <goals>
                                    <goal>revision</goal>
                                </goals>
                                <phase>initialize</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <generateGitPropertiesFile>true</generateGitPropertiesFile>
                            <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                            <includeOnlyProperties>
                                <includeOnlyProperty>^git.build.(time|version)$</includeOnlyProperty>
                                <includeOnlyProperty>^git.commit.id.(abbrev|full)$</includeOnlyProperty>
                            </includeOnlyProperties>
                            <commitIdGenerationMode>full</commitIdGenerationMode>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

            <!-- required for Maven & GUI Designer to play together -->
            <!-- https://stackoverflow.com/a/69258838 -->
            <pluginRepositories>
                <pluginRepository>
                    <id>intellij-repository</id>
                    <url>https://www.jetbrains.com/intellij-repository/releases</url>
                </pluginRepository>
                <pluginRepository>
                    <id>intellij-third-party</id>
                    <url>https://cache-redirector.jetbrains.com/intellij-dependencies</url>
                </pluginRepository>
            </pluginRepositories>

        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>17.0.0</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.intellij</groupId>
            <artifactId>forms_rt</artifactId>
            <version>7.0.3</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.6</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>2.0.6</version>
        </dependency>

        <dependency>
            <groupId>com.formdev</groupId>
            <artifactId>flatlaf</artifactId>
            <version>3.0</version>
        </dependency>

        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-all</artifactId>
            <version>1.16</version>
        </dependency>

        <dependency>
            <groupId>io.vavr</groupId>
            <artifactId>vavr</artifactId>
            <version>0.10.4</version>
        </dependency>

        <dependency>
            <groupId>net.lingala.zip4j</groupId>
            <artifactId>zip4j</artifactId>
            <version>2.11.3</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.11.0</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.14.2</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.9.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>5.1.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.1.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.24.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>